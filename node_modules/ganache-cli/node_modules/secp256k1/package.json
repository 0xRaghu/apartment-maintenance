{
  "_from": "secp256k1@3.7.1",
  "_id": "secp256k1@3.7.1",
  "_integrity": "sha512-1cf8sbnRreXrQFdH6qsg2H71Xw91fCCS9Yp021GnUNJzWJS/py96fS4lHbnTnouLp08Xj6jBoBB6V78Tdbdu5g==",
  "_location": "/ganache-cli/secp256k1",
  "_phantomChildren": {},
  "_requiredBy": [
    "/ganache-cli/ethereumjs-util"
  ],
  "_resolved": "https://registry.npmjs.org/secp256k1/-/secp256k1-3.7.1.tgz",
  "_shrinkwrap": null,
  "author": {
    "email": "mjbecze@gmail.com",
    "name": "Martin Becze"
  },
  "browser": {
    "./index.js": "./elliptic.js"
  },
  "bugs": {
    "url": "https://github.com/cryptocoinjs/secp256k1-node/issues"
  },
  "contributors": [
    {
      "name": "Aaron Davis",
      "url": "https://github.com/kumavis"
    },
    {
      "name": "Ian Matyssik",
      "url": "https://github.com/phpb-com"
    },
    {
      "name": "Kagami Hiiragi",
      "email": "kagami@genshiken.org",
      "url": "http://kagami.genshiken.org/"
    },
    {
      "name": "ethers",
      "url": "https://github.com/ethers"
    },
    {
      "name": "Kirill Fomichev",
      "email": "fanatid@ya.ru",
      "url": "https://github.com/fanatid"
    }
  ],
  "dependencies": {
    "bindings": "^1.5.0",
    "bip66": "^1.1.5",
    "bn.js": "^4.11.8",
    "create-hash": "^1.2.0",
    "drbg.js": "^1.0.1",
    "elliptic": "^6.4.1",
    "nan": "^2.14.0",
    "safe-buffer": "^5.1.2"
  },
  "description": "This module provides native bindings to ecdsa secp256k1 functions",
  "devDependencies": {
    "bignum": "git+https://github.com/fanatid/node-bignum.git#e688fd40dff43b03480bcdb5e4c099ee9ac27102",
    "browserify": "^16.2.3",
    "karma": "^1.3.0",
    "karma-browserify": "^5.0.4",
    "karma-chrome-launcher": "^2.2.0",
    "karma-detect-browsers": "^2.3.3",
    "karma-env-preprocessor": "^0.1.1",
    "karma-firefox-launcher": "^1.0.0",
    "karma-tap": "^3.1.1",
    "node-gyp": "^4.0.0",
    "nyc": "^14.1.0",
    "standard": "^12.0.1",
    "tape": "^4.10.1",
    "xorshift.js": "^1.0.3"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "files": [
    "API.md",
    "binding.gyp",
    "bindings.js",
    "elliptic.js",
    "index.js",
    "js.js",
    "lib",
    "src",
    "utils/has_lib.sh"
  ],
  "gypfile": true,
  "homepage": "https://github.com/cryptocoinjs/secp256k1-node#readme",
  "keywords": [
    "ec",
    "ecdh",
    "ecdsa",
    "secp256k1"
  ],
  "license": "MIT",
  "main": "./index.js",
  "name": "secp256k1",
  "optionalDependencies": {},
  "readme": "# secp256k1-node\n\nVersion | Mac/Linux | Windows\n------- | --------- | -------\n[![NPM Package](https://img.shields.io/npm/v/secp256k1.svg?style=flat-square)](https://www.npmjs.org/package/secp256k1) | [![Build Status](https://img.shields.io/travis/cryptocoinjs/secp256k1-node.svg?branch=master&style=flat-square)](https://travis-ci.org/cryptocoinjs/secp256k1-node) | [![AppVeyor](https://img.shields.io/appveyor/ci/fanatid/secp256k1-node.svg?branch=master&style=flat-square)](https://ci.appveyor.com/project/fanatid/secp256k1-node)\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\nThis module provides native bindings to [bitcoin-core/secp256k1](https://github.com/bitcoin-core/secp256k1). In browser [elliptic](https://github.com/indutny/elliptic) will be used.\n\nThis library is experimental, so use at your own risk. Works on node version 4.0.0 or greater.\n\n## Installation\n\n##### from npm\n\n`npm install secp256k1`\n\n##### from git\n\n```\ngit clone git@github.com:cryptocoinjs/secp256k1-node.git\ncd secp256k1-node\ngit submodule update --init\nnpm install\n```\n\n##### Windows\n\nThe easiest way to build the package on windows is to install [windows-build-tools](https://github.com/felixrieseberg/windows-build-tools).\n\nOr install the following software:\n\n  * Git: https://git-scm.com/download/win\n  * nvm: https://github.com/coreybutler/nvm-windows\n  * Python 2.7: https://www.python.org/downloads/release/python-2712/\n  * Visual C++ Build Tools: http://landinghub.visualstudio.com/visual-cpp-build-tools (Custom Install, and select both Windows 8.1 and Windows 10 SDKs)\n\nAnd run commands:\n\n```\nnpm config set msvs_version 2015 --global\nnpm install npm@next -g\n```\n\nBased on:\n\n  * https://github.com/nodejs/node-gyp/issues/629#issuecomment-153196245\n  * https://github.com/nodejs/node-gyp/issues/972\n\n## Usage\n\n* [API Reference (v3.x)](https://github.com/cryptocoinjs/secp256k1-node/blob/master/API.md)\n* [API Reference (v2.x)](https://github.com/cryptocoinjs/secp256k1-node/blob/v2.x/API.md)\n\n```js\nconst { randomBytes } = require('crypto')\nconst secp256k1 = require('secp256k1')\n// or require('secp256k1/elliptic')\n//   if you want to use pure js implementation in node\n\n// generate message to sign\nconst msg = randomBytes(32)\n\n// generate privKey\nlet privKey\ndo {\n  privKey = randomBytes(32)\n} while (!secp256k1.privateKeyVerify(privKey))\n\n// get the public key in a compressed format\nconst pubKey = secp256k1.publicKeyCreate(privKey)\n\n// sign the message\nconst sigObj = secp256k1.sign(msg, privKey)\n\n// verify the signature\nconsole.log(secp256k1.verify(msg, sigObj.signature, pubKey))\n// => true\n```\n\n\\* **.verify return false for high signatures**\n\n## Second pure js implementation\n\nProject has yet one secp256k1 implementation based on [elliptic](http://github.com/indutny/elliptic) and [bn.js](http://github.com/indutny/bn.js). The main purpose of this smaller size, high performance and easy code audit. This implementation is super experimental, use it at your own risk.\n\n## LICENSE\n\nThis library is free and open-source software released under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cryptocoinjs/secp256k1-node.git"
  },
  "scripts": {
    "coverage": "RANDOM_TESTS_REPEAT=1 nyc tape test/index.js",
    "coverage-lcov": "npm run coverage && nyc report -r lcov",
    "install": "npm run rebuild || echo \"Secp256k1 bindings compilation fail. Pure JS implementation will be used.\"",
    "lint": "standard",
    "rebuild": "node-gyp rebuild",
    "test": "npm run lint && npm run unit",
    "test:browser": "karma start karma.conf.js",
    "unit": "tape test/index.js"
  },
  "version": "3.7.1"
}
