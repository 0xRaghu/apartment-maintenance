{
  "_from": "camelcase@5.3.1",
  "_id": "camelcase@5.3.1",
  "_integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
  "_location": "/ganache-cli/camelcase",
  "_phantomChildren": {},
  "_requiredBy": [
    "/ganache-cli/yargs-parser"
  ],
  "_resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
  "_shrinkwrap": null,
  "author": {
    "email": "sindresorhus@gmail.com",
    "name": "Sindre Sorhus",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/camelcase/issues"
  },
  "dependencies": {},
  "description": "Convert a dash/dot/underscore/space separated string to camelCase or PascalCase: `foo-bar` → `fooBar`",
  "devDependencies": {
    "ava": "^1.4.1",
    "tsd": "^0.7.1",
    "xo": "^0.24.0"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "index.d.ts",
    "index.js"
  ],
  "homepage": "https://github.com/sindresorhus/camelcase#readme",
  "keywords": [
    "camel",
    "camel-case",
    "camelcase",
    "case",
    "convert",
    "dash",
    "dot",
    "hyphen",
    "pascal-case",
    "pascalcase",
    "separator",
    "string",
    "text",
    "underscore"
  ],
  "license": "MIT",
  "name": "camelcase",
  "optionalDependencies": {},
  "readme": "# camelcase [![Build Status](https://travis-ci.org/sindresorhus/camelcase.svg?branch=master)](https://travis-ci.org/sindresorhus/camelcase)\n\n> Convert a dash/dot/underscore/space separated string to camelCase or PascalCase: `foo-bar` → `fooBar`\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-camelcase?utm_source=npm-camelcase&utm_medium=referral&utm_campaign=readme\">Get professional support for 'camelcase' with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n\n---\n\n## Install\n\n```\n$ npm install camelcase\n```\n\n\n## Usage\n\n```js\nconst camelCase = require('camelcase');\n\ncamelCase('foo-bar');\n//=> 'fooBar'\n\ncamelCase('foo_bar');\n//=> 'fooBar'\n\ncamelCase('Foo-Bar');\n//=> 'fooBar'\n\ncamelCase('Foo-Bar', {pascalCase: true});\n//=> 'FooBar'\n\ncamelCase('--foo.bar', {pascalCase: false});\n//=> 'fooBar'\n\ncamelCase('foo bar');\n//=> 'fooBar'\n\nconsole.log(process.argv[3]);\n//=> '--foo-bar'\ncamelCase(process.argv[3]);\n//=> 'fooBar'\n\ncamelCase(['foo', 'bar']);\n//=> 'fooBar'\n\ncamelCase(['__foo__', '--bar'], {pascalCase: true});\n//=> 'FooBar'\n```\n\n\n## API\n\n### camelCase(input, [options])\n\n#### input\n\nType: `string` `string[]`\n\nString to convert to camel case.\n\n#### options\n\nType: `Object`\n\n##### pascalCase\n\nType: `boolean`<br>\nDefault: `false`\n\nUppercase the first character: `foo-bar` → `FooBar`\n\n\n## Security\n\nTo report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the fix and disclosure.\n\n\n## Related\n\n- [decamelize](https://github.com/sindresorhus/decamelize) - The inverse of this module\n- [uppercamelcase](https://github.com/SamVerschueren/uppercamelcase) - Like this module, but to PascalCase instead of camelCase\n- [titleize](https://github.com/sindresorhus/titleize) - Capitalize every word in string\n- [humanize-string](https://github.com/sindresorhus/humanize-string) - Convert a camelized/dasherized/underscored string into a humanized one\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/camelcase.git"
  },
  "scripts": {
    "test": "xo && ava && tsd"
  },
  "version": "5.3.1"
}
